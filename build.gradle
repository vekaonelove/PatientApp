plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.liquibase.gradle' version '2.1.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //MapStruct + lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    compileOnly 'org.mapstruct:mapstruct:1.5.4.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.4.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'


    // Database and Liquibase dependencies
    implementation 'mysql:mysql-connector-java:8.0.28'
    implementation 'org.liquibase:liquibase-core:4.23.0'

    // Jakarta validation dependencies
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
    implementation 'org.hibernate.validator:hibernate-validator:7.0.0.Final'

    //Lombok and mapstruct binding
    annotationProcessor'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Spring Boot devtools for development
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Configuration processor (for Spring Boot annotations)
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

